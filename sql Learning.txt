1. creating database

=> CREATE DATABASE college;

2. use college

=> means you are college database.

3. creating table 

=> CREATE TABLE student(

   id INT PRIMARY KEY,
   name VARCHAR(50),
   age INT NOT NULL
);

4. Insert into values in table

=> INSERT INTO student VALUES(1,"dheeraj",25);

5. see all values in table

=> SELECT * FROM student;

6. Difference between Char and Varchar.

=> char(50) if we are store size less than 50 means 10 so, free space are also reserved.
=> And in varchar(50) if we store 10 byte of length free space are released.


Types of sql command

1. DDL (data defination language)
=> create, alter, truncate, rename, drop

2. DML (data manipulation language)
=> insert, update, delete

3. DQL (data query language)
=> SELECT

4. DCL (data control language)
=> grant and revoke permission to user.

5. TCL (Transaction control language)
=> start transaction ,commit, rollback 

Database related Queries

1. if we create another database 
=> CREATE DATABASE IF NOT EXISTS Dheeraj;

2. drop database 
=> DROP DATABASE IF EXISTS Dheeraj;

3. SHOW DATABASES;

4. SHOW TABLES;

Table Queries

1. create table
=> CREATE TABLE student(

    roll no INT PRIMARY KEY,
    name VARCHAR(50)
);

2. Insert values
=> INSERT INTO student VALUES(12,"dheeraj');


3. show table and values
=> SELECT * FROM student;


key 

1. Primary key :- it is a column (or set of column) in a table that uniquely identifies each row.
there is only primary in an table.

2. Forign key :- A forign is an column(or set of column) in a table that refers to primary key of another table.
There is multiple forign key.

constraints)

1. primary key

ex- id INT PRIMARY KEY

2. unique

ex- roll no UNIQUE

3. NOT NULL

ex- name VARCHAR(25) NOT NULL

4. forign key

ex- cust_id INT
 FORIGN KEY(cust_id) REFERENCES (customer id)


5. check

ex- age INT CHECK (age>18 AND city="delhi")

SELECT command property

i) select * from student -> for all table data

ii) select name, city from student;

iii) select DISTINCT name from student -> for unique value means repeatedly values.


Aggregate function

max()
min()
avg()
count()
sum()

SELECT MAX(marks) FROM student;
SELECT COUNT(roll no) FROM student;


CLAUSES

1.) WHERE 

SELECT * FROM student WHERE marks>90;
And they applied condition on row.

OPERATOR 
AND , OR , BETWEEN , IN, NOT IN


SELECT * FROM student WHERE marks>85 AND city = "ballia";

SELECT * FROM student WHERE marks>89 OR city = "mumbai";

SELECT * FROM student WHERE marks BETWEEN 30 AND 50;

SELECT * FROM student WHERE city IN ("delhi", "ballia");

SELECT * FROM student WHERE city NOT IN ("pune");

2. ORDER BY 

SELECT * FROM student ORDER BY city ASC;

3. GROUP BY 

=> it collects data from multiple records and group the result by one or more column.

SELECT city, COUNT(rollno) FROM student GROUP BY city;

4. HAVING

=> similar to where clause but they applied on group by applied on condion on column.

rules to write condition and clauses.

SELECT column
FROM table name
WHERE condition in row
GROUP BY column
HAVING condition in column
ORDER BY asc or desc


Table related Queries

update

by default in mysql safe mode in on so firstly off the safe mode
=> SET SQL_SAFE_UPDATES = 0;

UPDATE student
SET grade= "A"
WHERE marks BETWEEN 80 AND 90;

Delete 

=> DELETE FROM student WHERE marks <33;

forign key 

CREATE TABLE teacher(

  id INT
  name VARCHAR(50),
  Dept id INT,
  FORIGN KEY(Dept id) REFERENCES Course(id);
  ON UPDATE CASCADE
  ON DELETE CASCADE
);

ON UPDATE CASCADE AND ON DELTE CASCADE => whenever you update and delete in primary table or parent table so referencing table reflect already.